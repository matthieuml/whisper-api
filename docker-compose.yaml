---
services:
  redis:
    image: redis:7.2.2-bookworm
    command: redis-server --save 60 1 --loglevel notice --requirepass ${REDIS_PASSWORD-password}
    restart: always
    volumes:
      - cache:/data
    networks:
      - whisper-api-network
    healthcheck:
      test: echo 'auth ${REDIS_PASSWORD-password}\nping' | redis-cli | grep PONG
      interval: 15s
      timeout: 3s
      retries: 3

  api:
    build:
      context: ./src
      dockerfile: Dockerfile
      target: development
    command: flask --app api.app run --host 0.0.0.0 --port 8000 --debug
    environment:
      SECRET_KEY: ${SECRET_KEY-secret}
      REDIS_HOST: ${REDIS_HOST-redis}
      REDIS_PASSWORD: ${REDIS_PASSWORD-password}
      ALLOWED_DOMAINS: ${ALLOWED_DOMAINS-*}
    ports:
      - 127.0.0.1:8000:8000
    volumes:
      - ./src:/src
    networks:
      - whisper-api-network
    depends_on:
      redis:
        condition: service_healthy

  worker:
    build:
      context: ./src
      dockerfile: Dockerfile
      target: development
    command: celery -A api.app.celery_app worker --loglevel=debug --concurrency=${WORKER_CONCURRENCY-1}
    environment:
      SECRET_KEY: ${SECRET_KEY-secret}
      REDIS_HOST: ${REDIS_HOST-redis}
      REDIS_PASSWORD: ${REDIS_PASSWORD-password}
      ALLOWED_DOMAINS: ${ALLOWED_DOMAINS-*}
    volumes:
      - ./src:/src
    networks:
      - whisper-api-network
    depends_on:
      redis:
        condition: service_healthy
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

  flower:
    image: mher/flower:2.0.1
    user: 10003:10003
    command: celery --broker=redis://:${REDIS_PASSWORD-password}@${REDIS_HOST-redis}:6379/0 flower
    ports:
      - 127.0.0.1:5555:5555
    networks:
      - whisper-api-network
    depends_on:
      redis:
        condition: service_healthy

volumes:
  cache:

networks:
  whisper-api-network:
